plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.music_app"
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

<<<<<<< HEAD
    //  compileOptions {
    //      sourceCompatibility JavaVersion.VERSION_1_8
    //      targetCompatibility JavaVersion.VERSION_1_8
    //  }
=======
    // compileOptions {
    //     sourceCompatibility JavaVersion.VERSION_1_8
    //     targetCompatibility JavaVersion.VERSION_1_8
    // }
>>>>>>> 289fa64671efd7d83e7dab8a61b86040574ff079

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions{
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.music_app"

        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
<<<<<<< HEAD
        targetSdkVersion 33
=======
        targetSdkVersion flutter.targetSdkVersion
>>>>>>> 289fa64671efd7d83e7dab8a61b86040574ff079
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled = true
<<<<<<< HEAD
     
        }
    }

=======
        }
    }
>>>>>>> 289fa64671efd7d83e7dab8a61b86040574ff079
     lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
<<<<<<< HEAD
    
=======

>>>>>>> 289fa64671efd7d83e7dab8a61b86040574ff079
    buildFeatures {
        viewBinding true
    }
}

flutter {
    source '../..'
}

dependencies {}
